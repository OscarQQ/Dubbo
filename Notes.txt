1. ORM (all in one, including all aspects of the service)
   ||
   MVC Vertically distributed can not totally independent, A lot of serivce need interact
   ||
   Distriuted System RPC using service from remote server
   ||
   Elastic Computing (Calculate the amount of ppl visit one site,
   Adjust the number of the servers handling that)

2. RPC Remote Procedure Control
    A function --> A function helper -serialization-> through the socket to send params to B
    -deserialize-> B funciton helper --> send back the data

    A connection between A and B
    The speed of serialization e.g. JSON > XML
    Google: gRPC
    Facebook: Thrift

3.public class DubboSPITest {

      @Test
      public void sayHello() throws Exception {
          ExtensionLoader<Robot> extensionLoader =
              ExtensionLoader.getExtensionLoader(Robot.class);
          Robot optimusPrime = extensionLoader.getExtension("optimusPrime");
          optimusPrime.sayHello();
          Robot bumblebee = extensionLoader.getExtension("bumblebee");
          bumblebee.sayHello();
      }
  }